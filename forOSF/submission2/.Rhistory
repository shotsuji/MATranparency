knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(RCurl)
library(RColorBrewer)
library(gridExtra)
library(gtable)
library(grid)
library(sjPlot)
### READ IN DATA
ma_data = read.delim("CodingForm.txt", skip=1)
### READ IN DATA
ma_data = read.delim("../CodingForm.txt", skip=1)
colnames(ma_data) = c("Coder","Citation","DoP","DOI","Funding","MA_Type","Protocol","Population","Design","Design_Record","Intervention","Predictors","Outcomes","Published","Databases","Terms","Dates","Author_Contact","Abstract","Fulltext","Coding","Effect_Size_Type","Data_Handling","Dependent_Data","Model","Weighting","Publication_Bias","Number_Found","Number_Eligible_For_Coding","Number_Coded","Means_SDs","Sample_Size","Other_Data","Effect_Size","Moderators","Supplementary","Statistical_Code","Review_Size","Notes_Review_Size","Comments","Response")
#some validity checks (not pertinent anymore since dealt with)
#ma_data[duplicated(ma_data$Citation) == TRUE,] #this showed 3 duplicates in original sheet - checked and moved duplicates to duplicates sheet in google sheet with documentation
#table(ma_data$Coder) #this shows that ST has 1, and EH 4 records more than required. ST simply coded one too much & this was moved to additional_codings sheet. EH had to MAs based on 3 separate searches each and therefore has 3 instead of 2 1 rows twice, leading to the 4 additional rows
### FORMAT
#remove columns not needed for ana
ma_data_ana = ma_data %>%
#these columns are descriptive (MA type excluded later, but needed for sorting data)
select(-c(Design_Record,Comments,Response)) %>%
#this column was kept in original data file but we decided to not use it
select(-c(Number_Eligible_For_Coding)) %>%
#this column are removed for the moment since coding is tricky
select(-c(Design)) %>%
#create variable that combines predictors & interventions
mutate(Indep_Var = case_when(Intervention == "y" ~ "y",
Predictors == "y" ~ "y",
TRUE ~ "n"))
#get larger grouping variables
groups = c("Background","Eligibility","SearchProcedure","Screening/Coding","MA methods","Bias","SearchResults","SumStats","Reproducibility")
length_ma = dim(ma_data_ana)[1]
groups_all = c(rep(groups[1],2*length_ma),rep(groups[2],5*length_ma),rep(groups[3],4*length_ma),rep(groups[4],3*length_ma),rep(groups[5],5*length_ma),rep(groups[6],1*length_ma),rep(groups[7],2*length_ma),rep(groups[8],5*length_ma),rep(groups[9],2*length_ma),rep(groups[2],1*length_ma))
#put into long format and recode
#overall
ma_data_long <- ma_data_ana %>%
gather(criterion, value, -c(Coder:DOI,MA_Type,Review_Size,Notes_Review_Size)) %>%
mutate(value_num = recode(value, "n" = 0, "y" = 1)) %>%
mutate(groups = groups_all) %>%
mutate(year = case_when(DoP >=1990 & DoP < 2000 ~ 1990,
DoP >=2000 & DoP < 2010 ~ 2000,
DoP >=2010 ~ 2010)) %>%
mutate(x = "Overall") %>%
mutate(MA_Type = recode(MA_Type, "group differences" ="Group"),
MA_Type = recode(MA_Type, "experimental" ="Experimental"),
MA_Type = recode(MA_Type, "correlation" ="Correlation"))
#by MA type
ma_data_long_corr <- ma_data_long %>%
filter(MA_Type == "Correlation") %>%
filter(criterion != "Indep_Var" & criterion !="Intervention" & criterion !="MeansSDs")
ma_data_long_group <- ma_data_long %>%
filter(MA_Type == "Group") %>%
filter(criterion != "Indep_Var" & criterion !="Intervention")
ma_data_long_exp <- ma_data_long %>%
filter(MA_Type == "Experimental") %>%
filter(criterion != "Indep_Var" & criterion !="Predictors")
### CREATE SUBSETS FOR ANALYSIS
##OVERALL
#overall summary - this should only include criteria that are applicable to all MA types
ma_sum_all <- ma_data_long %>%
filter(criterion != "Predictors" & criterion != "Intervention") %>%
group_by(Citation,x,Review_Size) %>%
summarise(pc = mean(value_num,na.rm=T)*100)
ma_sum_bytype <- ma_data_long %>%
filter(criterion != "Predictors" & criterion != "Intervention") %>%
group_by(Citation,x,Review_Size,MA_Type) %>%
summarise(pc = mean(value_num,na.rm=T)*100)
##overall for ana
ma_all_predictors <- ma_data_long %>%
filter(criterion != "Predictors" & criterion != "Intervention") %>%
group_by(DoP,Citation,x,Review_Size,MA_Type) %>%
summarise(pc = mean(value_num,na.rm=T)*100)
ma_all_group <- ma_data_long %>%
filter(criterion != "Predictors" & criterion != "Intervention") %>%
group_by(DoP,Citation,x,Review_Size,groups) %>%
summarise(pc = mean(value_num,na.rm=T)*100)
ma_all_criterion <- ma_data_long %>%
filter(criterion != "Predictors" & criterion != "Intervention") %>%
group_by(criterion) %>%
summarise(pc = mean(value_num,na.rm=T)*100,
sd = sd(value_num,na.rm=T)*100)
ma_groups_predictors <- ma_data_long %>%
filter(criterion != "Predictors" & criterion != "Intervention") %>%
group_by(DoP,Citation,x,Review_Size,MA_Type,groups) %>%
summarise(pc = mean(value_num,na.rm=T)*100)
#percentage by individual column
ma_bycolum_all <- ma_data_long %>%
filter(criterion != "Predictors" & criterion != "Intervention") %>%
group_by(criterion,groups,x) %>%
summarise(pc = mean(value_num,na.rm=T)*100)
#by year
ma_byyear_all <- ma_data_long %>%
filter(criterion != "Predictors" & criterion != "Intervention") %>%
#filter(!is.na(year)) %>%
group_by(year,Citation,x,Review_Size) %>%
summarise(pc = mean(value_num,na.rm=T)*100)
ma_byyear_cont_all <- ma_data_long %>%
filter(criterion != "Predictors" & criterion != "Intervention") %>%
#filter(!is.na(year)) %>%
group_by(DoP,Citation,x,Review_Size,MA_Type) %>%
summarise(pc = mean(value_num,na.rm=T)*100)
ma_byyear_groups_cont_all <- ma_data_long %>%
filter(criterion != "Predictors" & criterion != "Intervention") %>%
#filter(!is.na(year)) %>%
group_by(DoP,Citation,x,Review_Size,MA_Type,groups) %>%
summarise(pc = mean(value_num,na.rm=T)*100)
##BY MA TYPE
#by MA type; select respective applicable criteria
ma_sum_corr <-ma_data_long_corr %>%
group_by(Citation,x) %>%
summarise(pc = mean(value_num,na.rm=T)*100)
ma_sum_exp <-ma_data_long_exp %>%
group_by(Citation,x) %>%
summarise(pc = mean(value_num,na.rm=T)*100)
ma_sum_group <-ma_data_long_group %>%
group_by(Citation,x) %>%
summarise(pc = mean(value_num,na.rm=T)*100)
#BY MA TYPE & GROUP
#by MA type & group; select respective applicable criteria
ma_groups_corr <- ma_data_long_corr %>%
group_by(Citation,x,groups) %>%
summarise(pc = mean(value_num,na.rm=T)*100) %>%
mutate(groups = factor(groups,levels = c("Background","Eligibility","SearchProcedure",
"Screening/Coding","MA methods","Bias","SearchResults","SumStats","Reproducibility")))
ma_groups_exp <- ma_data_long_exp %>%
group_by(Citation,x,groups) %>%
summarise(pc = mean(value_num,na.rm=T)*100) %>%
mutate(groups = factor(groups,levels = c("Background","Eligibility","SearchProcedure",
"Screening/Coding","MA methods","Bias","SearchResults","SumStats","Reproducibility")))
ma_groups_group <- ma_data_long_group %>%
group_by(Citation,x,groups) %>%
summarise(pc = mean(value_num,na.rm=T)*100) %>%
mutate(groups = factor(groups,levels = c("Background","Eligibility","SearchProcedure",
"Screening/Coding","MA methods","Bias","SearchResults","SumStats","Reproducibility")))
lm.bygroup <- lm(pc ~ groups*DoP, data = ma_all_group)
plot_model(lm.bygroup, type = "pred", terms = c("groups", "DoP"))
class(ma_all_group$DoP)
?plot_model
plot_model(lm.bygroup, type = "pred", terms = c("DoP","groups"))
install.packages("devtools")
devtools::install_github("cardiomoon/ggiraphExtra")
devtools::install_github("cardiomoon/ggiraphExtra")
install.packages("ggiraphExtra")
library(ggiraphExtra)
brew install pkg-config
install.packages("gdtools", type = "source")
devtools::install_github("dreamRs/esquisse")
library(ggiraphExtra)
brew install pkg-config
anova(lm.bygroup)
summary(lm.bygroup)
plot_model(lm.bygroup, type = "pred", terms = c("DoP","groups"))
?plot_model
summary(lm.bygroup)
#anova(lm.bygroup)
plot_model(lm.bygroup, type = "pred", terms = c("DoP","groups"))
#
summary(lm.bygroup)
#regression by subsets of criteria
ma_all_group$groups = factor(ma_all_group$groups)
contrasts(ma_all_group$groups) = contr.sum
lm.bygroup <- lm(pc ~ groups*DoP, data = ma_all_group)
summary(lm.bygroup)
plot_model(lm.bygroup, type = "pred", terms = c("DoP","groups"))
ma_all_group <- ma_data_long %>%
filter(criterion != "Predictors" & criterion != "Intervention") %>%
group_by(DoP,Citation,x,Review_Size,groups) %>%
summarise(pc = mean(value_num,na.rm=T)*100)
ma_all_criterion <- ma_data_long %>%
filter(criterion != "Predictors" & criterion != "Intervention") %>%
group_by(criterion) %>%
summarise(pc = mean(value_num,na.rm=T)*100,
sd = sd(value_num,na.rm=T)*100)
lm.bygroup <- lm(pc ~ groups*DoP, data = ma_all_group)
summary(lm.bygroup)
plot_model(lm.bygroup, type = "pred", terms = c("DoP","groups"))
2.4953*1990
2.4953*1990+276-4793
2.4953*1990-4793
1990/2.4953
library(ggiraph)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(RCurl)
library(RColorBrewer)
library(gridExtra)
library(gtable)
library(grid)
ma_data = read.delim("../CodingSheet/CodingForm.txt", skip=1)
ma_data = read.delim("../CodingSheet/CodingForm.txt", skip=1)
colnames(ma_data) = c("Coder","Citation","DoP","DOI","Funding","MA_Type","Protocol","Population","Design","Design_Record","Intervention","Predictors","Outcomes","Published","Databases","Terms","Dates","Author_Contact","Abstract","Fulltext","Coding","Effect_Size_Type","Data_Handling","Dependent_Data","Model","Weighting","Publication_Bias","Number_Found","Number_Eligible_For_Coding","Number_Coded","Means_SDs","Sample_Size","Other_Data","Effect_Size","Moderators","Supplementary","Statistical_Code","Review_Size","Notes_Review_Size","Comments","Response")
#remove columns not needed for ana
ma_data_ana = ma_data %>%
#these columns are descriptive (MA type excluded later, but needed for sorting data)
select(-c(Design_Record,Comments,Response)) %>%
#this column was kept in original data file but we decided to not use it
select(-c(Number_Eligible_For_Coding)) %>%
#this column are removed for the moment since coding is tricky
select(-c(Design)) %>%
#create variable that combines predictors & interventions
mutate(Indep_Var = case_when(Intervention == "y" ~ "y",
Predictors == "y" ~ "y",
TRUE ~ "n"))
#get larger grouping variables
groups = c("Background","Eligibility","SearchProcedure","Screening/Coding","MA methods","Bias","SearchResults","SumStats","Reproducibility")
length_ma = dim(ma_data_ana)[1]
groups_all = c(rep(groups[1],2*length_ma),rep(groups[2],5*length_ma),rep(groups[3],4*length_ma),rep(groups[4],3*length_ma),rep(groups[5],5*length_ma),rep(groups[6],1*length_ma),rep(groups[7],2*length_ma),rep(groups[8],5*length_ma),rep(groups[9],2*length_ma),rep(groups[2],1*length_ma))
#put into long format and recode
#overall
ma_data_long <- ma_data_ana %>%
gather(criterion, value, -c(Coder:DOI,MA_Type,Review_Size,Notes_Review_Size)) %>%
mutate(value_num = recode(value, "n" = 0, "y" = 1)) %>%
mutate(groups = groups_all) %>%
mutate(year = case_when(DoP >=1990 & DoP < 2000 ~ 1990,
DoP >=2000 & DoP < 2010 ~ 2000,
DoP >=2010 ~ 2010)) %>%
mutate(x = "Overall") %>%
mutate(MA_Type = recode(MA_Type, "group differences" ="Group"),
MA_Type = recode(MA_Type, "experimental" ="Experimental"),
MA_Type = recode(MA_Type, "correlation" ="Correlation"))
View(ma_data_long)
#by MA type
ma_data_long_corr <- ma_data_long %>%
filter(MA_Type == "Correlation") %>%
filter(criterion != "Indep_Var" & criterion !="Intervention" & criterion !="Means_SDs")
ma_data_long_group <- ma_data_long %>%
filter(MA_Type == "Group") %>%
filter(criterion != "Indep_Var" & criterion !="Intervention")
ma_data_long_exp <- ma_data_long %>%
filter(MA_Type == "Experimental") %>%
filter(criterion != "Indep_Var" & criterion !="Predictors")
## by coder
ma_coder <- ma_data_long %>%
group_by(groups,Coder) %>%
summarise(pc = mean(value_num,na.rm=T)*100)
View(ma_coder)
lm.bycoder<- lm(pc ~ group*Coder, data = ma_coder)
lm.bycoder<- lm(pc ~ groups*Coder, data = ma_coder)
summary(lm.bycoder)
anova(lm.bycoder)
class(ma_coder$groups)
?t.test
#post-hoc by coder
t.test(ma_coder$pc[ma_coder$groups=="1"],ma_coder$pc[ma_coder$groups=="2"])
ma_coder$pc[ma_coder$groups=="2"]
ma_coder$pc[ma_coder$groups=="1"]
table(ma_coder$groups)
class(ma_coder$Coder)
#post-hoc by coder
t.test(ma_coder$pc[ma_coder$Coder==1],ma_coder$pc[ma_coder$Coder==2])
t.test(ma_coder$pc[ma_coder$Coder==1],ma_coder$pc[ma_coder$Coder==3])
t.test(ma_coder$pc[ma_coder$Coder==2],ma_coder$pc[ma_coder$Coder==3])
anova(lm.bycoder)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(RCurl)
library(RColorBrewer)
library(gridExtra)
library(gtable)
library(grid)
### READ IN DATA
ma_data = read.delim("../CodingSheet/CodingForm.txt", skip=1)
colnames(ma_data) = c("Coder","Citation","DoP","DOI","Funding","MA_Type","Protocol","Population","Design","Design_Record","Intervention","Predictors","Outcomes","Published","Databases","Terms","Dates","Author_Contact","Abstract","Fulltext","Coding","Effect_Size_Type","Data_Handling","Dependent_Data","Model","Weighting","Publication_Bias","Number_Found","Number_Eligible_For_Coding","Number_Coded","Means_SDs","Sample_Size","Other_Data","Effect_Size","Moderators","Supplementary","Statistical_Code","Review_Size","Notes_Review_Size","Comments","Response")
### FORMAT
#remove columns not needed for ana
ma_data_ana = ma_data %>%
#these columns are descriptive (MA type excluded later, but needed for sorting data)
select(-c(Design_Record,Comments,Response)) %>%
#this column was kept in original data file but we decided to not use it
select(-c(Number_Eligible_For_Coding)) %>%
#this column are removed for the moment since coding is tricky
select(-c(Design)) %>%
#create variable that combines predictors & interventions
mutate(Indep_Var = case_when(Intervention == "y" ~ "y",
Predictors == "y" ~ "y",
TRUE ~ "n"))
#get larger grouping variables
groups = c("Background","Eligibility","SearchProcedure","Screening/Coding","MA methods","Bias","SearchResults","SumStats","Reproducibility")
length_ma = dim(ma_data_ana)[1]
groups_all = c(rep(groups[1],2*length_ma),rep(groups[2],5*length_ma),rep(groups[3],4*length_ma),rep(groups[4],3*length_ma),rep(groups[5],5*length_ma),rep(groups[6],1*length_ma),rep(groups[7],2*length_ma),rep(groups[8],5*length_ma),rep(groups[9],2*length_ma),rep(groups[2],1*length_ma))
#put into long format and recode
#overall
ma_data_long <- ma_data_ana %>%
gather(criterion, value, -c(Coder:DOI,MA_Type,Review_Size,Notes_Review_Size)) %>%
mutate(value_num = recode(value, "n" = 0, "y" = 1)) %>%
mutate(groups = groups_all) %>%
mutate(year = case_when(DoP >=1990 & DoP < 2000 ~ 1990,
DoP >=2000 & DoP < 2010 ~ 2000,
DoP >=2010 ~ 2010)) %>%
mutate(x = "Overall") %>%
mutate(MA_Type = recode(MA_Type, "group differences" ="Group"),
MA_Type = recode(MA_Type, "experimental" ="Experimental"),
MA_Type = recode(MA_Type, "correlation" ="Correlation"))
#by MA type
ma_data_long_corr <- ma_data_long %>%
filter(MA_Type == "Correlation") %>%
filter(criterion != "Indep_Var" & criterion !="Intervention" & criterion !="Means_SDs")
ma_data_long_group <- ma_data_long %>%
filter(MA_Type == "Group") %>%
filter(criterion != "Indep_Var" & criterion !="Intervention")
ma_data_long_exp <- ma_data_long %>%
filter(MA_Type == "Experimental") %>%
filter(criterion != "Indep_Var" & criterion !="Predictors")
### CREATE SUBSETS FOR ANALYSIS
##OVERALL
#overall summary - this should only include criteria that are applicable to all MA types
ma_sum_all <- ma_data_long %>%
filter(criterion != "Predictors" & criterion != "Intervention") %>%
group_by(Citation,x,Review_Size) %>%
summarise(pc = mean(value_num,na.rm=T)*100)
#overall for regression analysis
ma_all_predictors <- ma_data_long %>%
filter(criterion != "Predictors" & criterion != "Intervention"& Review_Size!=".") %>% #one case where review size is unknown
group_by(DoP,Citation,x,Review_Size,MA_Type) %>%
summarise(pc = mean(value_num,na.rm=T)*100)
#by group for by-group regression analysis
ma_all_group <- ma_data_long %>%
filter(criterion != "Predictors" & criterion != "Intervention" & Review_Size!=".") %>% #one case where review size is unknown
group_by(DoP,Citation,x,Review_Size,groups,MA_Type,year) %>%
summarise(pc = mean(value_num,na.rm=T)*100) %>%
mutate(groups2 = factor(groups, levels = c("Background","Eligibility","SearchProcedure","Screening/Coding","Ma methods","Bias","SearchResults","SumStats","Reproducibility")))
#percentage by individual column
ma_bycolum_all <- ma_data_long %>%
filter(criterion != "Predictors" & criterion != "Intervention") %>%
group_by(criterion,groups,x) %>%
summarise(pc = mean(value_num,na.rm=T)*100,
nrow = sum(value_num,na.rm=T)) %>%
mutate(criterion_f = gsub("_"," ",criterion),
sd = sqrt(pc*(100-pc)/nrow)) #SD proxy for binomial data
ma_byyear_cont_all <- ma_data_long %>%
filter(criterion != "Predictors" & criterion != "Intervention") %>%
group_by(DoP,Citation,x,Review_Size,MA_Type) %>%
summarise(pc = mean(value_num,na.rm=T)*100)
##BY MA TYPE
#by MA type; select respective applicable criteria
ma_sum_corr <-ma_data_long_corr %>%
group_by(Citation,x) %>%
summarise(pc = mean(value_num,na.rm=T)*100)
ma_sum_exp <-ma_data_long_exp %>%
group_by(Citation,x) %>%
summarise(pc = mean(value_num,na.rm=T)*100)
ma_sum_group <-ma_data_long_group %>%
group_by(Citation,x) %>%
summarise(pc = mean(value_num,na.rm=T)*100)
## by coder
ma_coder <- ma_data_long %>%
group_by(groups,Coder) %>%
summarise(pc = mean(value_num,na.rm=T)*100)
lm.bycoder<- lm(pc ~ groups*Coder, data = ma_coder)
summary(lm.bycoder)
anova(lm.bycoder)
#post-hoc by coder
t.test(ma_coder$pc[ma_coder$Coder==1],ma_coder$pc[ma_coder$Coder==2])
t.test(ma_coder$pc[ma_coder$Coder==1],ma_coder$pc[ma_coder$Coder==3])
t.test(ma_coder$pc[ma_coder$Coder==2],ma_coder$pc[ma_coder$Coder==3])
##Results, paragraph 1
#type of MA
table(ma_data_ana$MA_Type)
#pubYear
summary(ma_data_long$DoP)
#revSize
summary(as.numeric(as.character(ma_sum_all$Review_Size)))
##Results, paragraph 2
#mean reported, overall & by MA type
mean(ma_sum_all$pc)
sd(ma_sum_all$pc)
mean(ma_sum_corr$pc)
sd(ma_sum_corr$pc)
mean(ma_sum_exp$pc)
sd(ma_sum_exp$pc)
mean(ma_sum_group$pc)
sd(ma_sum_group$pc)
#regression model 1: MA type x Publication date x Review Size
lm.all <- lm(pc ~ MA_Type*DoP*as.numeric(as.character(Review_Size)), data = ma_all_predictors)
summary(lm.all)
anova(lm.all)
##Results, paragraph 3
#regression model 2:
lm.bygroup<- lm(pc ~ MA_Type*DoP*as.numeric(as.character(Review_Size)) + DoP*groups, data = ma_all_group)
summary(lm.bygroup)
anova(lm.bygroup)
#follow-up descriptives 1: review size x ma type
ma_all_group %>%
group_by(MA_Type)%>%
summarise(RS_m = mean(as.numeric(as.character(Review_Size),na.rm=T)),
RS_sd = sd(as.numeric(as.character(Review_Size),na.rm=T)))
#follow-up descriptives 2: review size x publication year
ma_all_group %>%
group_by(year)%>%
summarise(RS_m = mean(as.numeric(as.character(Review_Size),na.rm=T)),
RS_sd = sd(as.numeric(as.character(Review_Size),na.rm=T)))
##Results, paragraph 4 onwards
#Descriptives for each criterion are directly obtained from dataframe ma_bycolumn_all
ma_bycolum_all = ma_bycolum_all %>%
arrange(groups)
ma_bycolum_all
#protocolyear (mentioned in paragraph 4)
ma_data_ana$DoP[ma_data_ana$Protocol =="y"]
##Discussion, paragraph 2
#1995/2015 percentage reported
mean(ma_byyear_cont_all$pc[ma_byyear_cont_all$DoP==1995])
mean(ma_byyear_cont_all$pc[ma_byyear_cont_all$DoP==2015])
summary(lm.bygroup)
anova(lm.bygroup)
summary(lm.bygroup)
summary(lm.all)
summary(lm.bygroup)
anova(lm.bygroup)
anova(lm.all)
corr(ma_all_group$Review_Size[ma_all_group$Ma_Type == "correlational"],ma_all_group$pc[ma_all_group$Ma_Type == "correlational"])
cor(ma_all_group$Review_Size[ma_all_group$Ma_Type == "correlational"],ma_all_group$pc[ma_all_group$Ma_Type == "correlational"])
class(ma_all_group$Review_Size)
table(ma_all_group$Review_Size)
cor(as.numeric(as.character(ma_all_group$Review_Size[ma_all_group$Ma_Type == "correlational"])),ma_all_group$pc[ma_all_group$Ma_Type == "correlational"])
cor(as.numeric(as.character(ma_all_group$Review_Size[ma_all_group$MA_Type == "correlational"])),ma_all_group$pc[ma_all_group$MA_Type == "correlational"])
cor(as.numeric(as.character(ma_all_group$Review_Size[ma_all_group$MA_Type == "correlational"])),ma_all_group$pc[ma_all_group$MA_Type == "correlational"],na.rm=T)
table(ma_all_group$MA_Type)
cor(as.numeric(as.character(ma_all_group$Review_Size[ma_all_group$MA_Type == "Correlation"])),ma_all_group$pc[ma_all_group$MA_Type == "Correlation"])
cor(as.numeric(as.character(ma_all_group$Review_Size[ma_all_group$MA_Type == "Experimental"])),ma_all_group$pc[ma_all_group$MA_Type == "Experimental"])
cor(as.numeric(as.character(ma_all_group$Review_Size[ma_all_group$MA_Type == "Correlation"])),ma_all_group$pc[ma_all_group$MA_Type == "Correlation"])
cor(as.numeric(as.character(ma_all_group$Review_Size[ma_all_group$MA_Type == "Group "])),ma_all_group$pc[ma_all_group$MA_Type == "Group "])
cor(as.numeric(as.character(ma_all_group$Review_Size[ma_all_group$MA_Type == "Group"])),ma_all_group$pc[ma_all_group$MA_Type == "Group"])
View(ma_all_group)
ma_all_group$Review_Size[ma_all_group$MA_Type == "Group"]
cor(as.numeric(as.character(ma_all_group$Review_Size[ma_all_group$MA_Type == "Group"])),ma_all_group$pc[ma_all_group$MA_Type == "Group"],na.rm=T)
ma_all_group$pc[is.na(ma_all_group$pc)]
cor(as.numeric(as.character(ma_all_group$Review_Size[ma_all_group$MA_Type == "Group" & !is.na(ma_all_group$pc)])),ma_all_group$pc[ma_all_group$MA_Type == "Group"& !is.na(ma_all_group$pc)])
cor(as.numeric(as.character(ma_all_group$Review_Size[ma_all_group$MA_Type == "Group" & !is.na(ma_all_group$pc)])),ma_all_group$pc[ma_all_group$MA_Type == "Group"& !is.na(ma_all_group$pc)])
table(ma_all_group$DoP)
table(ma_all_group$year)
cor(as.numeric(as.character(ma_all_group$Review_Size[ma_all_group$year == "1990"])),ma_all_group$pc[ma_all_group$year == "1990"])
cor(as.numeric(as.character(ma_all_group$Review_Size[ma_all_group$year == "2000"])),ma_all_group$pc[ma_all_groupyear == "2000"])
cor(as.numeric(as.character(ma_all_group$Review_Size[ma_all_group$year == "2010"])),ma_all_group$pc[ma_all_group$year == "2010"])
cor(as.numeric(as.character(ma_all_group$Review_Size[ma_all_group$year == "1990"])),ma_all_group$pc[ma_all_group$year == "1990"])
cor(as.numeric(as.character(ma_all_group$Review_Size[ma_all_group$year == "2000"])),ma_all_group$pc[ma_all_group$year == "2000"])
cor(as.numeric(as.character(ma_all_group$Review_Size[ma_all_group$year == "2010"])),ma_all_group$pc[ma_all_group$year == "2010"])
cor(as.numeric(as.character(ma_all_group$Review_Size[ma_all_group$year == "1990"!is.na(ma_all_group$pc)])),ma_all_group$pc[ma_all_group$year == "1990"!is.na(ma_all_group$pc)])
cor(as.numeric(as.character(ma_all_group$Review_Size[ma_all_group$year == "1990" & !is.na(ma_all_group$pc)])),ma_all_group$pc[ma_all_group$year == "1990" & !is.na(ma_all_group$pc)])
## by coder
ma_coder <- ma_data_long %>%
group_by(groups,Coder) %>%
summarise(pc = mean(value_num,na.rm=T)*100)
lm.bycoder<- lm(pc ~ groups*Coder, data = ma_coder)
summary(lm.bycoder)
anova(lm.bygroup)
anova(lm.all)
anova(lm.bygroup)
summary(lm.bygroup)
