panel.grid.minor = element_blank()) +
scale_color_manual(values = colors[7]) +
theme(legend.position="none",axis.title.x=element_blank(),axis.text.x = element_blank(),axis.title.y=element_text(size=12))+
scale_x_discrete(limits = rev(levels(searchresult$criterion_f)))+
xlab("Search\nResults")+
coord_flip(ylim=c(0,100))
ma_searchres_all_plot
#summary stats
sumstats = ma_bycolum_all %>%
filter(groups == "SumStats") %>%
mutate(criterion_f = factor(criterion_f,levels=c("Sample Size","Means SDs","Other Data","Effect Size","Moderators")))
ma_sum_all_plot = ggplot(sumstats, aes(y = pc,x = criterion_f,col=colors[1]))+
geom_point(data = sumstats[sumstats$criterion_f == "Sample Size" |sumstats$criterion_f == "Means SDs" |sumstats$criterion_f=="Effect Size",],size = 4) +
geom_point(data = sumstats[sumstats$criterion_f != "Sample Size" & sumstats$criterion_f != "Means SDs" & sumstats$criterion_f != "Effect Size",],size = 4,pch=17) +
geom_errorbar(aes(ymin = pc-sd,ymax=pc+sd,width=0))+
theme_light(base_size = 15) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
scale_color_manual(values = colors[1]) +
theme(legend.position="none",axis.title.x=element_blank(),axis.text.x = element_blank(),axis.title.y=element_text(size=12))+
scale_x_discrete(limits = rev(levels(sumstats$criterion_f)))+
xlab("Summary\nStatistics")+
coord_flip(ylim=c(0,100))
ma_sum_all_plot
#reproducibility
repro = ma_bycolum_all %>%
filter(groups == "Reproducibility") %>%
mutate(criterion_f = factor(criterion_f,levels=c("Supplementary","Statistical Code")))
ma_rep_all_plot = ggplot(repro, aes(y = pc,x = criterion_f,col=colors[2]))+
geom_point(size = 4,pch=17) +
geom_errorbar(aes(ymin = pc-sd,ymax=pc+sd,width=0))+
theme_light(base_size = 15) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
scale_color_manual(values = colors[2]) +
theme(legend.position="none",axis.title.y=element_text(size=12))+
scale_x_discrete(limits = rev(levels(repro$criterion_f)))+
xlab("Reproducibility\n")+
ylab("Percent Reported")+
coord_flip(ylim=c(0,100))
ma_rep_all_plot
g_ma_back_all_plot <- ggplotGrob(ma_back_all_plot)
g_ma_eli_all_plot <- ggplotGrob(ma_eli_all_plot)
g_ma_searchproc_all_plot <- ggplotGrob(ma_searchproc_all_plot)
g_ma_screen_all_plot <- ggplotGrob(ma_screen_all_plot)
g_ma_methods_all_plot <- ggplotGrob(ma_methods_all_plot)
g_ma_bias_all_plot <- ggplotGrob(ma_bias_all_plot)
g_ma_searchres_all_plot <- ggplotGrob(ma_searchres_all_plot)
g_ma_sum_all_plot <- ggplotGrob(ma_sum_all_plot)
g_ma_rep_all_plot <- ggplotGrob(ma_rep_all_plot)
g <- rbind(g_ma_back_all_plot, g_ma_eli_all_plot, g_ma_searchproc_all_plot,g_ma_screen_all_plot,g_ma_methods_all_plot,g_ma_bias_all_plot,g_ma_searchres_all_plot,g_ma_sum_all_plot,g_ma_rep_all_plot , size = "first")
g$widths <- unit.pmax(g_ma_back_all_plot$widths, g_ma_eli_all_plot$widths,g_ma_searchproc_all_plot$widths,g_ma_screen_all_plot$widths,g_ma_methods_all_plot$widths,g_ma_bias_all_plot$widthss,g_ma_searchres_all_plot$widths,g_ma_sum_all_plot$widths,g_ma_rep_all_plot$widths)
#png("../figures/Fig2.png",width = 400, height = 800)
png("Fig2.png",width = 400, height = 800)
grid.newpage()
grid.draw(g)
dev.off()
?dort
?sort
ma_bycolum_all[order(groups),]
ma_bycolum_all = ma_bycolum_all[order(groups),]
View(ma_bycolum_all)
#percentage by individual column
ma_bycolum_all <- ma_data_long %>%
filter(criterion != "Predictors" & criterion != "Intervention") %>%
group_by(criterion,groups,x) %>%
summarise(pc = mean(value_num,na.rm=T)*100,
sd = sd(value_num,na.rm=T)*100) %>%
mutate(criterion_f = gsub("_"," ",criterion))
ma_bycolum_all = ma_bycolum_all[order(groups),]
View(ma_bycolum_all)
#percentage by individual column
ma_bycolum_all <- ma_data_long %>%
filter(criterion != "Predictors" & criterion != "Intervention") %>%
group_by(criterion,groups,x) %>%
summarise(pc = mean(value_num,na.rm=T)*100,
sd = sd(value_num,na.rm=T)*100) %>%
mutate(criterion_f = gsub("_"," ",criterion))
table(ma_bycolum_all$groups)
ma_bycolum_all22 = arrange(ma_bycolum_all,groups)
View(ma_bycolum_all22)
ma_bycolum_all = ma_bycolum_all %>%
arrange(groups)
View(ma_bycolum_all)
#protocolyear (mentioned in paragraph 3)
ma_data_ana$DoP[ma_data_ana$Protocol =="y"]
##Results, paragraph 2
#mean reported, overall & by MA type
mean(ma_sum_all$pc)
sd(ma_sum_all$pc)
mean(ma_sum_corr$pc)
sd(ma_sum_corr$pc)
mean(ma_sum_exp$pc)
sd(ma_sum_exp$pc)
mean(ma_sum_group$pc)
sd(ma_sum_group$pc)
ma_bycolum_all <- ma_data_long %>%
filter(criterion != "Predictors" & criterion != "Intervention") %>%
group_by(criterion,groups,x)
View(ma_bycolum_all)
4340/154
temp =  ma_data_long %>%
temp = ma_bycolum_all %>%
View(ma_bycolum_all)
View(ma_bycolum_all)
temp = ma_bycolum_all %>% filter(criterion == "Funding")
View(temp)
mean(temp$value_num)
sd(temp$value_num)
#percentage by individual column
ma_bycolum_all <- ma_data_long %>%
filter(criterion != "Predictors" & criterion != "Intervention") %>%
group_by(criterion,groups,x) %>%
summarise(pc = mean(value_num,na.rm=T)*100,
sd = sd(value_num,na.rm=T)*100) %>%
mutate(criterion_f = gsub("_"," ",criterion))
View(ma_bycolum_all)
#percentage by individual column
ma_bycolum_all <- ma_data_long %>%
filter(criterion != "Predictors" & criterion != "Intervention") %>%
group_by(criterion,groups,x) %>%
summarise(pc = mean(value_num,na.rm=T)*100) %>%
mutate(criterion_f = gsub("_"," ",criterion))
##Results, paragraph 2
#mean reported, overall & by MA type
mean(ma_sum_all$pc)
mean(ma_bycolum_all$pc)
View(ma_sum_all)
View(ma_data_long)
View(temp)
mean(temp$value_num)
sum(temp$value)
sum(temp$value_num)
90/155
summary(lm.all)
anova(lm.all)
#dummy code factor levels
contrasts(ma_all_predictors$MA_Type)
#dummy code factor levels
contrasts(ma_all_predictors$MA_Type) = contr.sum
contrasts(ma_all_predictors$MA_Type)
#dummy code factor levels
contrasts(ma_all_predictors$MA_Type) = contr.sum
lm.all <- lm(pc ~ MA_Type*DoP*as.numeric(as.character(Review_Size)), data = ma_all_predictors)
summary(lm.all)
anova(lm.all)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(RCurl)
library(RColorBrewer)
library(gridExtra)
library(gtable)
library(grid)
#percentage by larger group
ma_bygroup_all <- ma_data_long %>%
filter(criterion != "Predictors" & criterion != "Intervention") %>%
group_by(groups,x) %>%
summarise(pc = mean(value_num,na.rm=T)*100)
View(ma_bygroup_all)
View(ma_all_predictors)
ma_all_criterion <- ma_data_long %>%
filter(criterion != "Predictors" & criterion != "Intervention") %>%
group_by(criterion) %>%
summarise(pc = mean(value_num,na.rm=T)*100,
sd = sd(value_num,na.rm=T)*100)
View(ma_all_criterion)
ma_all_group <- ma_data_long %>%
filter(criterion != "Predictors" & criterion != "Intervention") %>%
group_by(DoP,Citation,x,Review_Size,group) %>%
summarise(pc = mean(value_num,na.rm=T)*100)
View(ma_data_long)
ma_all_group <- ma_data_long %>%
filter(criterion != "Predictors" & criterion != "Intervention") %>%
group_by(DoP,Citation,x,Review_Size,groups) %>%
summarise(pc = mean(value_num,na.rm=T)*100)
lm.bygroup <- lm(pc ~ groups*DoP*as.numeric(as.character(Review_Size)), data = ma_all_group)
anova(lm.bygroup)
summary(lm.bygroup)
anova(lm.bygroup)
#regression by subsets of criteria
contrasts(ma_all_predictors$groups) = contr.sum
#regression by subsets of criteria
ma_all_predictors$groups = factor(ma_all_predictors$groups)
contrasts(ma_all_predictors$groups) = contr.sum
#regression by subsets of criteria
ma_all_predictors$groups = factor(ma_all_predictors$groups)
contrasts(ma_all_group$groups) = contr.sum
#regression by subsets of criteria
ma_all_group$groups = factor(ma_all_group$groups)
contrasts(ma_all_group$groups) = contr.sum
lm.bygroup <- lm(pc ~ groups*DoP*as.numeric(as.character(Review_Size)), data = ma_all_group)
anova(lm.bygroup)
summary(lm.bygroup)
lm.bygroup$coefficients
summary(lm.bygroup)
#BY YEAR
ma_sum_byyear_cont_plot = ggplot(ma_byyear_cont_all, aes(y = pc, x = DoP, col = MA_Type))+
geom_point(aes(alpha = 0.5,size = Review_Size)) +
#geom_jitter(width = 0.1,height = 0, aes(alpha = 0.5,col = factor(x)))+
theme_light(base_size = 15) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank()) +
theme(legend.position=c(0.8,0.15),legend.title = element_blank(),axis.title.y=element_blank(),axis.title.x=element_blank(),axis.text.x=element_text(size=14)) +
geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[2]), slope = lm.bygroup$coefficients[12],col="darkgrey")+
geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[3]), slope = lm.bygroup$coefficients[13],col="darkgrey")+
scale_color_manual(values = colors[2:4])+
scale_x_continuous(breaks = c(1990,1995,2000,2005,2010,2015))+
guides(size = FALSE)+
guides(alpha = FALSE)+
xlab("Publication Year")+
ggtitle("C. Publication Year")
#BY YEAR
ma_sum_byyear_group_plot = ggplot(ma_all_group, aes(y = pc, x = DoP, col = group))+
geom_point(aes(alpha = 0.5,size = Review_Size)) +
#geom_jitter(width = 0.1,height = 0, aes(alpha = 0.5,col = factor(x)))+
theme_light(base_size = 15) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank()) +
theme(legend.position=c(0.8,0.15),legend.title = element_blank(),axis.title.y=element_blank(),axis.title.x=element_blank(),axis.text.x=element_text(size=14)) +
geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[2]), slope = lm.bygroup$coefficients[12],col="darkgrey")+
geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[3]), slope = lm.bygroup$coefficients[13],col="darkgrey")+
scale_color_manual(values = colors[2:4])+
scale_x_continuous(breaks = c(1990,1995,2000,2005,2010,2015))+
guides(size = FALSE)+
guides(alpha = FALSE)+
xlab("Publication Year")+
ggtitle("C. Publication Year")
ma_sum_byyear_group_plot
#BY YEAR
ma_sum_byyear_group_plot = ggplot(ma_all_group, aes(y = pc, x = DoP, col = groups))+
geom_point(aes(alpha = 0.5,size = Review_Size)) +
#geom_jitter(width = 0.1,height = 0, aes(alpha = 0.5,col = factor(x)))+
theme_light(base_size = 15) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank()) +
theme(legend.position=c(0.8,0.15),legend.title = element_blank(),axis.title.y=element_blank(),axis.title.x=element_blank(),axis.text.x=element_text(size=14)) +
geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[2]), slope = lm.bygroup$coefficients[12],col="darkgrey")+
geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[3]), slope = lm.bygroup$coefficients[13],col="darkgrey")+
scale_color_manual(values = colors[2:4])+
scale_x_continuous(breaks = c(1990,1995,2000,2005,2010,2015))+
guides(size = FALSE)+
guides(alpha = FALSE)+
xlab("Publication Year")+
ggtitle("C. Publication Year")
ma_sum_byyear_group_plot
#BY YEAR
ma_sum_byyear_group_plot = ggplot(ma_all_group, aes(y = pc, x = DoP, col = groups))+
geom_point(aes(alpha = 0.5,size = Review_Size)) +
#geom_jitter(width = 0.1,height = 0, aes(alpha = 0.5,col = factor(x)))+
theme_light(base_size = 15) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank()) +
theme(legend.position=c(0.8,0.15),legend.title = element_blank(),axis.title.y=element_blank(),axis.title.x=element_blank(),axis.text.x=element_text(size=14)) +
geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[2]), slope = lm.bygroup$coefficients[12],col="darkgrey")+
geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[3]), slope = lm.bygroup$coefficients[13],col="darkgrey")+
#scale_color_manual(values = colors[2:4])+
scale_x_continuous(breaks = c(1990,1995,2000,2005,2010,2015))+
guides(size = FALSE)+
guides(alpha = FALSE)+
xlab("Publication Year")+
ggtitle("C. Publication Year")
ma_sum_byyear_group_plot
lm.all$coefficients[1]
#BY YEAR
ma_sum_byyear_cont_plot = ggplot(ma_byyear_cont_all, aes(y = pc, x = DoP, col = MA_Type))+
geom_point(aes(alpha = 0.5,size = Review_Size)) +
#geom_jitter(width = 0.1,height = 0, aes(alpha = 0.5,col = factor(x)))+
theme_light(base_size = 15) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank()) +
theme(legend.position=c(0.8,0.15),legend.title = element_blank(),axis.title.y=element_blank(),axis.title.x=element_blank(),axis.text.x=element_text(size=14)) +
geom_abline(intercept = lm.all$coefficients[1], slope = lm.all$coefficients[4],col="darkgrey")+
scale_color_manual(values = colors[2:4])+
scale_x_continuous(breaks = c(1990,1995,2000,2005,2010,2015))+
guides(size = FALSE)+
guides(alpha = FALSE)+
xlab("Publication Year")+
ggtitle("C. Publication Year")
ma_sum_byyear_cont_plot
lm.all$coefficients[4]
lm.all$coefficients[1]
lm.bygroup$coefficients[1]
lm.bygroup$coefficients[2]
lm.bygroup$coefficients[12]
lm.bygroup$coefficients[13]
#BY YEAR
ma_sum_byyear_group_plot = ggplot(ma_all_group, aes(y = pc, x = DoP, col = groups))+
#geom_point(aes(alpha = 0.5,size = Review_Size)) +
#geom_jitter(width = 0.1,height = 0, aes(alpha = 0.5,col = factor(x)))+
theme_light(base_size = 15) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank()) +
theme(legend.position=c(0.8,0.15),legend.title = element_blank(),axis.title.y=element_blank(),axis.title.x=element_blank(),axis.text.x=element_text(size=14)) +
geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[2]), slope = lm.bygroup$coefficients[12],col="darkgrey")+
geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[3]), slope = lm.bygroup$coefficients[13],col="darkgrey")+
#scale_color_manual(values = colors[2:4])+
scale_x_continuous(breaks = c(1990,1995,2000,2005,2010,2015))+
guides(size = FALSE)+
guides(alpha = FALSE)+
xlab("Publication Year")+
ggtitle("C. Publication Year")
ma_sum_byyear_group_plot
#BY YEAR
ma_sum_byyear_group_plot = ggplot(ma_all_group, aes(y = pc, x = DoP, col = groups))+
#geom_point(aes(alpha = 0.5,size = Review_Size)) +
#geom_jitter(width = 0.1,height = 0, aes(alpha = 0.5,col = factor(x)))+
theme_light(base_size = 15) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank()) +
theme(legend.position=c(0.8,0.15),legend.title = element_blank(),axis.title.y=element_blank(),axis.title.x=element_blank(),axis.text.x=element_text(size=14)) +
geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[2]), slope = lm.bygroup$coefficients[12],col="darkgrey")+
geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[3]), slope = lm.bygroup$coefficients[13],col="darkgrey")+
stat_summary(aes(y=fitted(lm.bygroup)), fun.y=mean, geom="line",cex=2)+
#scale_color_manual(values = colors[2:4])+
scale_x_continuous(breaks = c(1990,1995,2000,2005,2010,2015))+
guides(size = FALSE)+
guides(alpha = FALSE)+
xlab("Publication Year")+
ggtitle("C. Publication Year")
ma_sum_byyear_group_plot
#BY YEAR
ma_sum_byyear_group_plot = ggplot(ma_all_group, aes(y = pc, x = DoP))+
#geom_point(aes(alpha = 0.5,size = Review_Size)) +
#geom_jitter(width = 0.1,height = 0, aes(alpha = 0.5,col = factor(x)))+
theme_light(base_size = 15) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank()) +
theme(legend.position=c(0.8,0.15),legend.title = element_blank(),axis.title.y=element_blank(),axis.title.x=element_blank(),axis.text.x=element_text(size=14)) +
geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[2]), slope = lm.bygroup$coefficients[12],col="darkgrey")+
geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[3]), slope = lm.bygroup$coefficients[13],col="darkgrey")+
stat_summary(aes(y=fitted(lm.bygroup)), fun.y=mean, geom="line",cex=2)+
#scale_color_manual(values = colors[2:4])+
scale_x_continuous(breaks = c(1990,1995,2000,2005,2010,2015))+
guides(size = FALSE)+
guides(alpha = FALSE)+
xlab("Publication Year")+
ggtitle("C. Publication Year")
ma_sum_byyear_group_plot
lm.bygroup <- lm(pc ~ groups*DoP, data = ma_all_group)
summary(lm.bygroup)
anova(lm.bygroup)
#BY YEAR
ma_sum_byyear_group_plot = ggplot(ma_all_group, aes(y = pc, x = DoP))+
#geom_point(aes(alpha = 0.5,size = Review_Size)) +
#geom_jitter(width = 0.1,height = 0, aes(alpha = 0.5,col = factor(x)))+
theme_light(base_size = 15) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank()) +
theme(legend.position=c(0.8,0.15),legend.title = element_blank(),axis.title.y=element_blank(),axis.title.x=element_blank(),axis.text.x=element_text(size=14)) +
geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[2]), slope = lm.bygroup$coefficients[12],col="darkgrey")+
geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[3]), slope = lm.bygroup$coefficients[13],col="darkgrey")+
stat_summary(aes(y=fitted(lm.bygroup)), fun.y=mean, geom="line",cex=2)+
#scale_color_manual(values = colors[2:4])+
scale_x_continuous(breaks = c(1990,1995,2000,2005,2010,2015))+
guides(size = FALSE)+
guides(alpha = FALSE)+
xlab("Publication Year")+
ggtitle("C. Publication Year")
ma_sum_byyear_group_plot
#BY YEAR
ma_sum_byyear_group_plot = ggplot(ma_all_group, aes(y = pc, x = DoP))+
#geom_point(aes(alpha = 0.5,size = Review_Size)) +
#geom_jitter(width = 0.1,height = 0, aes(alpha = 0.5,col = factor(x)))+
theme_light(base_size = 15) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank()) +
theme(legend.position=c(0.8,0.15),legend.title = element_blank(),axis.title.y=element_blank(),axis.title.x=element_blank(),axis.text.x=element_text(size=14)) +
#geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[2]), slope = lm.bygroup$coefficients[12],col="darkgrey")+
#  geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[3]), slope = lm.bygroup$coefficients[13],col="darkgrey")+
stat_summary(aes(y=fitted(lm.bygroup)), fun.y=mean, geom="line",cex=2)+
#scale_color_manual(values = colors[2:4])+
scale_x_continuous(breaks = c(1990,1995,2000,2005,2010,2015))+
guides(size = FALSE)+
guides(alpha = FALSE)+
xlab("Publication Year")+
ggtitle("C. Publication Year")
ma_sum_byyear_group_plot
lm.bygroup$coefficients
#BY YEAR
ma_sum_byyear_group_plot = ggplot(ma_all_group, aes(y = pc, x = DoP))+
#geom_point(aes(alpha = 0.5,size = Review_Size)) +
#geom_jitter(width = 0.1,height = 0, aes(alpha = 0.5,col = factor(x)))+
theme_light(base_size = 15) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank()) +
theme(legend.position=c(0.8,0.15),legend.title = element_blank(),axis.title.y=element_blank(),axis.title.x=element_blank(),axis.text.x=element_text(size=14)) +
geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[2]), slope = lm.bygroup$coefficients[11],col="darkgrey")+
#  geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[3]), slope = lm.bygroup$coefficients[13],col="darkgrey")+
stat_summary(aes(y=fitted(lm.bygroup)), fun.y=mean, geom="line",cex=2)+
#scale_color_manual(values = colors[2:4])+
scale_x_continuous(breaks = c(1990,1995,2000,2005,2010,2015))+
guides(size = FALSE)+
guides(alpha = FALSE)+
xlab("Publication Year")+
ggtitle("C. Publication Year")
ma_sum_byyear_group_plot
#BY YEAR
ma_sum_byyear_group_plot = ggplot(ma_all_group, aes(y = pc, x = DoP))+
#geom_point(aes(alpha = 0.5,size = Review_Size)) +
#geom_jitter(width = 0.1,height = 0, aes(alpha = 0.5,col = factor(x)))+
theme_light(base_size = 15) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank()) +
theme(legend.position=c(0.8,0.15),legend.title = element_blank(),axis.title.y=element_blank(),axis.title.x=element_blank(),axis.text.x=element_text(size=14)) +
geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[2]), slope = lm.bygroup$coefficients[11],col="darkgrey")+
#  geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[3]), slope = lm.bygroup$coefficients[13],col="darkgrey")+
# stat_summary(aes(y=fitted(lm.bygroup)), fun.y=mean, geom="line",cex=2)+
#scale_color_manual(values = colors[2:4])+
scale_x_continuous(breaks = c(1990,1995,2000,2005,2010,2015))+
guides(size = FALSE)+
guides(alpha = FALSE)+
xlab("Publication Year")+
ggtitle("C. Publication Year")
ma_sum_byyear_group_plot
#BY YEAR
ma_sum_byyear_group_plot = ggplot(ma_all_group, aes(y = pc, x = DoP))+
#geom_point(aes(alpha = 0.5,size = Review_Size)) +
#geom_jitter(width = 0.1,height = 0, aes(alpha = 0.5,col = factor(x)))+
theme_light(base_size = 15) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank()) +
theme(legend.position=c(0.8,0.15),legend.title = element_blank(),axis.title.y=element_blank(),axis.title.x=element_blank(),axis.text.x=element_text(size=14)) +
geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[2]), slope = lm.bygroup$coefficients[11],col="darkgrey")+
#  geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[3]), slope = lm.bygroup$coefficients[13],col="darkgrey")+
# stat_summary(aes(y=fitted(lm.bygroup)), fun.y=mean, geom="line",cex=2)+
#scale_color_manual(values = colors[2:4])+
# scale_x_continuous(breaks = c(1990,1995,2000,2005,2010,2015))+
guides(size = FALSE)+
guides(alpha = FALSE)+
xlab("Publication Year")+
ggtitle("C. Publication Year")
ma_sum_byyear_group_plot
summary(lm.bygroup)
ma_all_group <- ma_data_long %>%
filter(criterion != "Predictors" & criterion != "Intervention") %>%
group_by(DoP,Citation,x,Review_Size,groups) %>%
summarise(pc = mean(value_num,na.rm=T)*100)
lm.bygroup <- lm(pc ~ groups*DoP, data = ma_all_group)
summary(lm.bygroup)
anova(lm.bygroup)
#BY YEAR
ma_sum_byyear_group_plot = ggplot(ma_all_group, aes(y = pc, x = DoP))+
#geom_point(aes(alpha = 0.5,size = Review_Size)) +
#geom_jitter(width = 0.1,height = 0, aes(alpha = 0.5,col = factor(x)))+
theme_light(base_size = 15) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank()) +
theme(legend.position=c(0.8,0.15),legend.title = element_blank(),axis.title.y=element_blank(),axis.title.x=element_blank(),axis.text.x=element_text(size=14)) +
geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[2]), slope = lm.bygroup$coefficients[11],col="darkgrey")+
#  geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[3]), slope = lm.bygroup$coefficients[13],col="darkgrey")+
# stat_summary(aes(y=fitted(lm.bygroup)), fun.y=mean, geom="line",cex=2)+
#scale_color_manual(values = colors[2:4])+
# scale_x_continuous(breaks = c(1990,1995,2000,2005,2010,2015))+
guides(size = FALSE)+
guides(alpha = FALSE)+
xlab("Publication Year")+
ggtitle("C. Publication Year")
ma_sum_byyear_group_plot
summary(lm.bygroup)
lm.all <- lm(pc ~ MA_Type*DoP*as.numeric(as.character(Review_Size)), data = ma_all_predictors)
summary(lm.all)
anova(lm.all)
##Results, paragraph 3 onwards
#Descriptives for each criterion are directly obtained from dataframe ma_bycolumn_all
ma_bycolum_all = ma_bycolum_all %>%
arrange(groups)
#BY YEAR
ma_sum_byyear_group_plot = ggplot(ma_all_group, aes(y = pc, x = DoP))+
#geom_point(aes(alpha = 0.5,size = Review_Size)) +
#geom_jitter(width = 0.1,height = 0, aes(alpha = 0.5,col = factor(x)))+
theme_light(base_size = 15) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank()) +
theme(legend.position=c(0.8,0.15),legend.title = element_blank(),axis.title.y=element_blank(),axis.title.x=element_blank(),axis.text.x=element_text(size=14)) +
geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[2]), slope = lm.bygroup$coefficients[11],col="darkgrey")+
#  geom_abline(intercept = (lm.bygroup$coefficients[1] + lm.bygroup$coefficients[3]), slope = lm.bygroup$coefficients[13],col="darkgrey")+
stat_summary(aes(y=fitted(lm.bygroup)), fun.y=mean, geom="line",cex=2)+
#scale_color_manual(values = colors[2:4])+
# scale_x_continuous(breaks = c(1990,1995,2000,2005,2010,2015))+
guides(size = FALSE)+
guides(alpha = FALSE)+
xlab("Publication Year")+
ggtitle("C. Publication Year")
ma_sum_byyear_group_plot
fitted(lm.bygroup)
length(fitted(lm.bygroup))
plot(fitted(lm.bygroup))
length(fitted(lm.bygroup))/8
length(fitted(lm.bygroup))/9
table(ma_all_group$groups)
library(ggiraphExtra)
install.packages("ggiraphExtra")
install.packages("ggiraphExtra")
library(ggiraphExtra)
install.packages("ggiraphExtra")
library(ggiraphExtra)
remove.packages("ggiraph")
remove.packages("ggiraphExtra")
install.packages("ggiraphExtra")
library(ggiraphExtra)
plot_model(lm.bygroup, type = "pred", terms = c("groups", "cDoP"))
plot_model(lm.bygroup, type = "pred", terms = c("groups", "DoP"))
library(sJPlot)
library(sjPlot)
install.packages("sjPlot")
library(sjPlot)
install.packages(c("backports", "boot", "broom", "callr", "car", "caTools", "checkmate", "cli", "clipr", "cluster", "colorspace", "curl", "data.table", "dbplyr", "devtools", "digest", "evaluate", "eyetrackingR", "feather", "forcats", "fs", "ggplot2", "git2r", "gtable", "haven", "hexbin", "highr", "httpuv", "httr", "jsonlite", "knitr", "lazyeval", "maptools", "markdown", "MASS", "Matrix", "metafor", "mgcv", "modelr", "nlme", "openssl", "openxlsx", "pkgbuild", "plotly", "processx", "ps", "purrr", "quadprog", "quantreg", "rcmdcheck", "RcppEigen", "RCurl", "readr", "readxl", "remotes", "reprex", "reticulate", "rmarkdown", "rpart", "rstudioapi", "rvest", "shiny", "stringi", "stringr", "survival", "tibble", "tidyr", "tinytex", "usethis", "xfun", "xtable", "zoo"))
install.packages(c("backports", "boot", "broom", "callr", "car", "caTools", "checkmate", "cli", "clipr", "cluster", "colorspace", "curl", "data.table", "dbplyr", "devtools", "digest", "evaluate", "eyetrackingR", "feather", "forcats", "fs", "ggplot2", "git2r", "gtable", "haven", "hexbin", "highr", "httpuv", "httr", "jsonlite", "knitr", "lazyeval", "maptools", "markdown", "MASS", "Matrix", "metafor", "mgcv", "modelr", "nlme", "openssl", "openxlsx", "pkgbuild", "plotly", "processx", "ps", "purrr", "quadprog", "quantreg", "rcmdcheck", "RcppEigen", "RCurl", "readr", "readxl", "remotes", "reprex", "reticulate", "rmarkdown", "rpart", "rstudioapi", "rvest", "shiny", "stringi", "stringr", "survival", "tibble", "tidyr", "tinytex", "usethis", "xfun", "xtable", "zoo"))
install.packages(c("backports", "boot", "broom", "callr", "car", "caTools", "checkmate", "cli", "clipr", "cluster", "colorspace", "curl", "data.table", "dbplyr", "devtools", "digest", "evaluate", "eyetrackingR", "feather", "forcats", "fs", "ggplot2", "git2r", "gtable", "haven", "hexbin", "highr", "httpuv", "httr", "jsonlite", "knitr", "lazyeval", "maptools", "markdown", "MASS", "Matrix", "metafor", "mgcv", "modelr", "nlme", "openssl", "openxlsx", "pkgbuild", "plotly", "processx", "ps", "purrr", "quadprog", "quantreg", "rcmdcheck", "RcppEigen", "RCurl", "readr", "readxl", "remotes", "reprex", "reticulate", "rmarkdown", "rpart", "rstudioapi", "rvest", "shiny", "stringi", "stringr", "survival", "tibble", "tidyr", "tinytex", "usethis", "xfun", "xtable", "zoo"))
install.packages(c("backports", "boot", "broom", "callr", "car", "caTools", "checkmate", "cli", "clipr", "cluster", "colorspace", "curl", "data.table", "dbplyr", "devtools", "digest", "evaluate", "eyetrackingR", "feather", "forcats", "fs", "ggplot2", "git2r", "gtable", "haven", "hexbin", "highr", "httpuv", "httr", "jsonlite", "knitr", "lazyeval", "maptools", "markdown", "MASS", "Matrix", "metafor", "mgcv", "modelr", "nlme", "openssl", "openxlsx", "pkgbuild", "plotly", "processx", "ps", "purrr", "quadprog", "quantreg", "rcmdcheck", "RcppEigen", "RCurl", "readr", "readxl", "remotes", "reprex", "reticulate", "rmarkdown", "rpart", "rstudioapi", "rvest", "shiny", "stringi", "stringr", "survival", "tibble", "tidyr", "tinytex", "usethis", "xfun", "xtable", "zoo"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
