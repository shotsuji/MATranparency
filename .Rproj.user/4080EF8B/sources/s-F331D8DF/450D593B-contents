---
title: "MACodingTransparency_explore"
author: "Sho"
date: "8/8/2018"
output: pdf_document
---

First exploration of MA transparency data

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
library(RCurl)
library(ggplot2)
library(RColorBrewer)
library(gridExtra)
```

```{r readin, echo = F, warning=FALSE}
### READ IN DATA
url = getURL("https://docs.google.com/spreadsheets/d/e/2PACX-1vRSq8M2OV53eK1Mt99hxjnUcinfZuA5poxKPPPtN5bv12gKfiz_DHvhHHHbbjuzpINWM-jGvRBxrANg/pub?gid=0&single=true&output=csv")
ma_data = read.csv(textConnection(url), skip =1)

#some validity checks (not pertinent anymore since dealt with)
#ma_data[duplicated(ma_data$Citation) == TRUE,] #this showed 3 duplicates in original sheet - checked and moved duplicates to duplicates sheet in google sheet with documentation
#table(ma_data$Coder) #this shows that ST has 1, and EH 4 records more than required. ST simply coded one too much & this was moved to additional_codings sheet. EH had to MAs based on 3 separate searches each and therefore has 3 instead of 2 1 rows twice, leading to the 4 additional rows

### FORMAT

#remove columns not needed for ana
ma_data_ana = ma_data %>%
  #these columns are descriptive
  select(-c(Eligibility...Design.record,Comments,Response)) %>%
  #this columns are removed for the moment since coding is tricky 
  select(-c(Eligibility...Design))
         
#get larger grouping variables
#groups = colnames(read.csv(textConnection(url)))
#groups_all = c(rep(groups[5],3*length_ma),rep(groups[8],5*length_ma),rep(groups[15],4*length_ma),rep(groups[19],3*length_ma),rep(groups[22],5*length_ma),rep(groups[27],1*length_ma),rep(groups[28],3*length_ma),rep(groups[31],5*length_ma),rep(groups[36],2*length_ma))
groups = c("Background","Eligibility","SearchProcedure","Screening/Coding","MA methods","Bias","SearchResults","SumStats","Reproducibility")
length_ma = dim(ma_data_ana)[1]

groups_all = c(rep(groups[1],3*length_ma),rep(groups[2],5*length_ma),rep(groups[3],4*length_ma),rep(groups[4],3*length_ma),rep(groups[5],5*length_ma),rep(groups[6],1*length_ma),rep(groups[7],3*length_ma),rep(groups[8],5*length_ma),rep(groups[9],2*length_ma))

#put into long format and recode 
#overall
ma_data_long <- ma_data_ana %>%
  gather(criterion, value, -c(Coder:DOI)) %>%
  mutate(value_num = recode(value, "n" = 0, "y" = 1, "correlation" = 1, "experimental" = 1, "group differences" = 1
)) %>%
  mutate(groups = groups_all) %>%
  mutate(year = case_when(DoP >=1990 & DoP < 2000 ~ 1990,
                          DoP >=2000 & DoP < 2010 ~ 2000,
                          DoP >=2010 ~ 2010)) %>%
  mutate(x = 1)

#by MA type
length_ma = dim(ma_data_ana[ma_data_ana$Meta.Analysis.Type == "correlation",])[1]
groups_corr = c(rep(groups[1],3*length_ma),rep(groups[2],5*length_ma),rep(groups[3],4*length_ma),rep(groups[4],3*length_ma),rep(groups[5],5*length_ma),rep(groups[6],1*length_ma),rep(groups[7],3*length_ma),rep(groups[8],5*length_ma),rep(groups[9],2*length_ma))

ma_data_long_corr <- ma_data_ana %>%
  filter(Meta.Analysis.Type == "correlation") %>%
  gather(criterion, value, -c(Coder:DOI)) %>%
  mutate(value_num = recode(value, "n" = 0, "y" = 1, "correlation" = 1, "experimental" = 1, "group differences" = 1
)) %>%
  mutate(groups = groups_corr) %>%
  mutate(year = case_when(DoP >=1990 & DoP < 2000 ~ 1990,
                          DoP >=2000 & DoP < 2010 ~ 2000,
                          DoP >=2010 ~ 2010)) %>%
  mutate(x = 1)

length_ma = dim(ma_data_ana[ma_data_ana$Meta.Analysis.Type == "experimental",])[1]
groups_exp = c(rep(groups[1],3*length_ma),rep(groups[2],5*length_ma),rep(groups[3],4*length_ma),rep(groups[4],3*length_ma),rep(groups[5],5*length_ma),rep(groups[6],1*length_ma),rep(groups[7],3*length_ma),rep(groups[8],5*length_ma),rep(groups[9],2*length_ma))

ma_data_long_exp <- ma_data_ana %>%
  filter(Meta.Analysis.Type == "experimental") %>%
  gather(criterion, value, -c(Coder:DOI)) %>%
  mutate(value_num = recode(value, "n" = 0, "y" = 1, "correlation" = 1, "experimental" = 1, "group differences" = 1
)) %>%
  mutate(groups = groups_exp) %>%
  mutate(year = case_when(DoP >=1990 & DoP < 2000 ~ 1990,
                          DoP >=2000 & DoP < 2010 ~ 2000,
                          DoP >=2010 ~ 2010)) %>%
  mutate(x = 1)


length_ma = dim(ma_data_ana[ma_data_ana$Meta.Analysis.Type == "group differences",])[1]
groups_group = c(rep(groups[1],3*length_ma),rep(groups[2],5*length_ma),rep(groups[3],4*length_ma),rep(groups[4],3*length_ma),rep(groups[5],5*length_ma),rep(groups[6],1*length_ma),rep(groups[7],3*length_ma),rep(groups[8],5*length_ma),rep(groups[9],2*length_ma))

ma_data_long_group <- ma_data_ana %>%
  filter(Meta.Analysis.Type == "group differences") %>%
  gather(criterion, value, -c(Coder:DOI)) %>%
  mutate(value_num = recode(value, "n" = 0, "y" = 1, "correlation" = 1, "experimental" = 1, "group differences" = 1
)) %>%
  mutate(groups = groups_group) %>%
  mutate(year = case_when(DoP >=1990 & DoP < 2000 ~ 1990,
                          DoP >=2000 & DoP < 2010 ~ 2000,
                          DoP >=2010 ~ 2010)) %>%
  mutate(x = 1)

```

```{r subsets, echo = F, warning=FALSE}

### CREATE SUBSETS FOR ANALYSIS 

##OVERALL
#overall summary - this should only include criteria that are applicable to all MA types
ma_sum_all <- ma_data_long %>%
  #filter(value_num == 0 | value_num == 1 ) %>%
  filter(criterion != "Eligibility...Intervention.Manipulation" & criterion != "Eligibility...Predictors" & criterion != "Means.sd..if.applicable.") %>%
  group_by(Citation,x) %>%
  summarise(pc = mean(value_num)*100)

#percentage by individual column
ma_bycolum_all <- ma_data_long %>%
  filter(criterion != "Eligibility...Intervention.Manipulation" & criterion != "Eligibility...Predictors" & criterion != "Means.sd..if.applicable.") %>%
  group_by(criterion,groups,x) %>%
  summarise(pc = mean(value_num,na.rm=T)*100,
            sd = sd(value_num,na.rm=T)*100)

#by year
ma_byyear_all <- ma_data_long %>%
 filter(criterion != "Eligibility...Intervention.Manipulation" & criterion != "Eligibility...Predictors" & criterion != "Means.sd..if.applicable.") %>%
  #filter(!is.na(year)) %>%
  group_by(year,Citation,x) %>%
  summarise(pc = mean(value_num,na.rm=T)*100)


##BY MA TYPE
#by MA type; select respective applicable criteria
ma_sum_corr <-ma_data_long_corr %>%
  filter(criterion != "Eligibility...Intervention.Manipulation" & criterion != "Means.sd..if.applicable.") %>%
  group_by(Citation,x) %>%
  summarise(pc = mean(value_num)*100)

ma_sum_exp <-ma_data_long_exp %>%
  filter(criterion != "Eligibility...Predictors") %>%
  group_by(Citation,x) %>%
  summarise(pc = mean(value_num)*100)

ma_sum_group <-ma_data_long_group %>%
  filter(criterion != "Eligibility...Intervention.Manipulation") %>%
  group_by(Citation,x) %>%
  summarise(pc = mean(value_num)*100)

#BY MA TYPE & GROUP
#by MA type & group; select respective applicable criteria
ma_groups_corr <-ma_data_long_corr %>%
  filter(criterion != "Eligibility...Intervention.Manipulation" & criterion != "Means.sd..if.applicable.") %>%
  group_by(Citation,x,groups) %>%
  summarise(pc = mean(value_num,na.rm=T)*100)

ma_groups_exp <-ma_data_long_exp %>%
  filter(criterion != "Eligibility...Predictors") %>%
  group_by(Citation,x,groups) %>%
  summarise(pc = mean(value_num,na.rm=T)*100)

ma_groups_group <-ma_data_long_group %>%
  filter(criterion != "Eligibility...Intervention.Manipulation") %>%
  group_by(Citation,x,groups) %>%
  summarise(pc = mean(value_num,na.rm=T)*100)

#BY MA TYPE & larger groupings
ma_theme_corr <-ma_data_long_corr %>%
  filter(criterion != "Eligibility...Intervention.Manipulation" & criterion != "Means.sd..if.applicable.") %>%
  mutate(theme = case_when(groups == "Background" | groups == "Eligibility" ~ "Scope",
                           groups == "SearchProcedure" | groups == "Screening/Coding" | groups == "SearchResults" ~ "Search/Coding",
                           groups == "MA methods" | groups == "Bias" ~ "Methods",
                           groups == "SumStats" | groups == "Reproducibility" ~ "Reproducibility")) %>%
  mutate(theme = factor(theme,levels = c("Scope","Search/Coding","Methods","Reproducibility"))) %>%
  group_by(Citation,x,theme) %>%
  summarise(pc = mean(value_num,na.rm=T)*100)

ma_theme_exp <-ma_data_long_exp %>%
  filter(criterion != "Eligibility...Predictors") %>%
  mutate(theme = case_when(groups == "Background" | groups == "Eligibility" ~ "Scope",
                           groups == "SearchProcedure" | groups == "Screening/Coding" | groups == "SearchResults" ~ "Search/Coding",
                           groups == "MA methods" | groups == "Bias" ~ "Methods",
                           groups == "SumStats" | groups == "Reproducibility" ~ "Reproducibility")) %>%
  mutate(theme = factor(theme,levels = c("Scope","Search/Coding","Methods","Reproducibility"))) %>%
  group_by(Citation,x,theme) %>%
  summarise(pc = mean(value_num,na.rm=T)*100)

ma_theme_group <-ma_data_long_group %>%
  filter(criterion != "Eligibility...Intervention.Manipulation") %>%
  mutate(theme = case_when(groups == "Background" | groups == "Eligibility" ~ "Scope",
                           groups == "SearchProcedure" | groups == "Screening/Coding" | groups == "SearchResults" ~ "Search/Coding",
                           groups == "MA methods" | groups == "Bias" ~ "Methods",
                           groups == "SumStats" | groups == "Reproducibility" ~ "Reproducibility")) %>%
  mutate(theme = factor(theme,levels = c("Scope","Search/Coding","Methods","Reproducibility"))) %>%
  group_by(Citation,x,theme) %>%
  summarise(pc = mean(value_num,na.rm=T)*100)




#relationships: correlation between funding, type of MA
#scrape title word cloud

```

## Overall figures
```{r overall, echo = F, warning=FALSE}

##COLOR SCHEME
colors = brewer.pal(4, "Set2")

##OVERALL SUMMARY GRAPHS
ma_sum_all_plot = ggplot(ma_sum_all, aes(y = pc,x = x))+
   geom_boxplot(aes(alpha = 0.3, fill = factor(x))) +
  geom_jitter(width = 0.1,height = 0, aes(alpha = 0.5,col = factor(x)))+
   theme_light(base_size = 15) +
    scale_fill_manual(values = colors[1]) +
    scale_color_manual(values = colors[1]) +
  theme(legend.position="none",axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank()) +
   ylab("Percentage reported")+
   ggtitle("Reported overall")
 ma_sum_all_plot
 #ggsave("ma_data_sum_all_pc_plot.png",ma_data_sum_all_pc_plot, height = 5, width = 5, units = "in" )
 
#all separate
ma_crit_all_plot = ggplot(ma_bycolum_all, aes(y = pc,x = criterion,col = groups))+
   geom_point(aes(x = reorder(criterion, pc))) +
  geom_errorbar(aes(x = reorder(criterion, pc),ymin = pc-sd,ymax=pc+sd))+
   theme_light(base_size = 10) +
 theme(axis.text.x = element_text(angle = 45, hjust = 1))+
   ylab("Percentage reported")+
   ggtitle("Reported by criterion")
ma_crit_all_plot

#all by year
ma_sum_byyear_plot = ggplot(ma_byyear_all, aes(y = pc, x = x))+
  facet_wrap("year") +
  geom_boxplot(aes(alpha = 0.3,fill = factor(x))) +
  geom_jitter(width = 0.1,height = 0, aes(alpha = 0.5,col = factor(x)))+
  theme_light(base_size = 15) +
  theme(legend.position="none",axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank()) +
    scale_fill_manual(values = colors[1]) +
    scale_color_manual(values = colors[1]) +
  ylab("Percentage reported")+
  ggtitle("Reported by year")
ma_sum_byyear_plot
#ggsave("ma_data_sum_byyear_pc_plot.png",ma_data_sum_byyear_pc_plot, height = 5, width = 5, units = "in" )

```

## Figures by MA design
```{r bydesign, echo = F, warning=FALSE}
##GRAPHS BY MA DESIGN
ma_sum_corr_plot = ggplot(ma_sum_corr, aes(y = pc, x = x))+
   geom_boxplot(aes(alpha = 0.3, fill = factor(x))) +
  geom_jitter(width = 0.1,height = 0, aes(alpha = 0.5,col = factor(x)))+
   theme_light(base_size = 15) +
  scale_fill_manual(values = colors[2]) +
  scale_color_manual(values = colors[2]) +
   theme(legend.position="none",axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank()) +
  ylim(30,80)+
   ylab("Percentage reported")+
   ggtitle("Correlational\n designs")
 
 ma_sum_exp_plot = ggplot(ma_sum_exp, aes(y = pc, x = x))+
   geom_boxplot(aes(alpha = 0.3, fill = factor(x))) +
  geom_jitter(width = 0.1,height = 0, aes(alpha = 0.5,col = factor(x)))+
   theme_light(base_size = 15) +
  scale_fill_manual(values = colors[3]) +
  scale_color_manual(values = colors[3]) +
  theme(legend.position="none",axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank()) +
     ylim(30,80)+
   ylab("Percentage reported")+
   ggtitle("Experimental\n designs")

 ma_sum_group_plot = ggplot(ma_sum_group, aes(y = pc, x = x))+
   geom_boxplot(aes(alpha = 0.3, fill = factor(x))) +
  geom_jitter(width = 0.1,height = 0, aes(alpha = 0.5,col = factor(x)))+
   theme_light(base_size = 15) +
  scale_fill_manual(values = colors[4]) +
  scale_color_manual(values = colors[4]) +
  theme(legend.position="none",axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank()) +
     ylim(30,80)+
   ylab("Percentage reported")+
   ggtitle("Group\n designs")

grid.arrange(ma_sum_corr_plot, ma_sum_exp_plot, ma_sum_group_plot, 
             ncol = 3, nrow = 1)

##BY MA DESIGN & THEMATIC GROUP
ma_groups_corr_plot = ggplot(ma_groups_corr, aes(y = pc, x = groups,fill = groups))+
   geom_boxplot(aes(alpha = 0.4),col = brewer.pal(9, "Oranges")[5]) +
  geom_jitter(width = 0.2,height = 0.01, aes(alpha = 0.5),stat = "identity",pch=21,col = brewer.pal(9, "Oranges")[5])+
   theme_light(base_size = 15) +
    scale_fill_brewer(palette="Oranges") +
   theme(legend.position="none",axis.text.x = element_text(angle = 45, hjust = 1)) +
  ylim(0,100)+
   ylab("Percentage reported")+
   ggtitle("Correlational designs")
ma_groups_corr_plot

ma_groups_exp_plot = ggplot(ma_groups_exp, aes(y = pc, x = groups,fill = groups))+
   geom_boxplot(aes(alpha = 0.4),col =  brewer.pal(9, "Blues")[5]) +
  geom_jitter(width = 0.2,height = 0.01, aes(alpha = 0.5),stat = "identity",pch=21,col =  brewer.pal(9, "Blues")[5])+
   theme_light(base_size = 15) +
  scale_fill_brewer(palette="Blues") +
   theme(legend.position="none",axis.text.x = element_text(angle = 45, hjust = 1)) +
  ylim(0,100)+
   ylab("Percentage reported")+
   ggtitle("Experimental designs")
ma_groups_exp_plot


ma_groups_group_plot = ggplot(ma_groups_group, aes(y = pc, x = groups,fill = groups))+
   geom_boxplot(aes(alpha = 0.4),col =  brewer.pal(9, "Purples")[5]) +
  geom_jitter(width = 0.2,height = 0.01, aes(alpha = 0.5),stat = "identity",pch=21,col =  brewer.pal(9, "Purples")[5])+
   theme_light(base_size = 15) +
  scale_fill_brewer(palette="Purples") +
   theme(legend.position="none",axis.text.x = element_text(angle = 45, hjust = 1)) +
  ylim(0,100)+
   ylab("Percentage reported")+
   ggtitle("Group designs")
ma_groups_group_plot

##BY MA DESIGN & BROADER GROUP
ma_theme_corr_plot = ggplot(ma_theme_corr, aes(y = pc, x = theme,fill = theme))+
   geom_boxplot(aes(alpha = 0.4),col = brewer.pal(9, "Oranges")[5]) +
  geom_jitter(width = 0.2,height = 0.01, aes(alpha = 0.5),stat = "identity",pch=21,col = brewer.pal(9, "Oranges")[5])+
   theme_light(base_size = 15) +
    scale_fill_brewer(palette="Oranges") +
   theme(legend.position="none",axis.text.x = element_text(angle = 45, hjust = 1)) +
  ylim(0,100)+
   ylab("Percentage reported")+
   ggtitle("Correlational designs")
ma_theme_corr_plot

ma_theme_exp_plot = ggplot(ma_theme_exp, aes(y = pc, x = theme,fill = theme))+
   geom_boxplot(aes(alpha = 0.4),col = brewer.pal(9, "Blues")[5]) +
  geom_jitter(width = 0.2,height = 0.01, aes(alpha = 0.5),stat = "identity",pch=21,col = brewer.pal(9, "Blues")[5])+
   theme_light(base_size = 15) +
    scale_fill_brewer(palette="Blues") +
   theme(legend.position="none",axis.text.x = element_text(angle = 45, hjust = 1)) +
  ylim(0,100)+
   ylab("Percentage reported")+
   ggtitle("Experimental designs")
ma_theme_exp_plot

ma_theme_group_plot = ggplot(ma_theme_group, aes(y = pc, x = theme,fill = theme))+
   geom_boxplot(aes(alpha = 0.4),col = brewer.pal(9, "Purples")[5]) +
  geom_jitter(width = 0.2,height = 0.01, aes(alpha = 0.5),stat = "identity",pch=21,col = brewer.pal(9, "Purples")[5])+
   theme_light(base_size = 15) +
    scale_fill_brewer(palette="Purples") +
   theme(legend.position="none",axis.text.x = element_text(angle = 45, hjust = 1)) +
  ylim(0,100)+
   ylab("Percentage reported")+
   ggtitle("Group designs")
ma_theme_group_plot

```

